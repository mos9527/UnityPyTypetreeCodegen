name: Publish

on:
  push:
  workflow_dispatch:
     
jobs:
  build-and-release:
    if: "contains(github.event.head_commit.message, 'Version')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools wheel build twine
        python -m pip install -e .
    - name: Build package
      run: python -m build --no-isolation
    - name: Publish package
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload ./dist/*.whl --skip-existing
        twine upload ./dist/*.tar.gz --skip-existing        
    - name : Get Version
      id   : get_version
      shell: bash
      run  : |                
        commit_message=$(git log -1 --pretty=%s)
        version=$(echo "$commit_message" | awk '{print $2}')        
        echo "version=$version" >> $GITHUB_OUTPUT          
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Version ${{ steps.get_version.outputs.version }}
    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}